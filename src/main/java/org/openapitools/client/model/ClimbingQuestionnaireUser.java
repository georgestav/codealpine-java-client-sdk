/*
 * Codealpine
 * The codealpine API description
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.List;
import org.openapitools.client.model.ClimbingQuestionnaire;
import org.openapitools.client.model.ClimbingQuestionnaireAnalysis;
import org.threeten.bp.OffsetDateTime;

/**
 * ClimbingQuestionnaireUser
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2023-04-12T19:52:35.504818235+02:00[Europe/Paris]")
public class ClimbingQuestionnaireUser {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private BigDecimal id;

  public static final String SERIALIZED_NAME_USER_ID = "userId";
  @SerializedName(SERIALIZED_NAME_USER_ID)
  private String userId;

  public static final String SERIALIZED_NAME_RESULT = "result";
  @SerializedName(SERIALIZED_NAME_RESULT)
  private BigDecimal result;

  public static final String SERIALIZED_NAME_ANSWERS = "answers";
  @SerializedName(SERIALIZED_NAME_ANSWERS)
  private Object answers;

  public static final String SERIALIZED_NAME_QUESTIONNAIRES = "questionnaires";
  @SerializedName(SERIALIZED_NAME_QUESTIONNAIRES)
  private List<ClimbingQuestionnaire> questionnaires = new ArrayList<ClimbingQuestionnaire>();

  public static final String SERIALIZED_NAME_ANALYSIS = "analysis";
  @SerializedName(SERIALIZED_NAME_ANALYSIS)
  private ClimbingQuestionnaireAnalysis analysis;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;


  public ClimbingQuestionnaireUser id(BigDecimal id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getId() {
    return id;
  }


  public void setId(BigDecimal id) {
    this.id = id;
  }


  public ClimbingQuestionnaireUser userId(String userId) {
    
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")

  public String getUserId() {
    return userId;
  }


  public void setUserId(String userId) {
    this.userId = userId;
  }


  public ClimbingQuestionnaireUser result(BigDecimal result) {
    
    this.result = result;
    return this;
  }

   /**
   * Get result
   * @return result
  **/
  @ApiModelProperty(required = true, value = "")

  public BigDecimal getResult() {
    return result;
  }


  public void setResult(BigDecimal result) {
    this.result = result;
  }


  public ClimbingQuestionnaireUser answers(Object answers) {
    
    this.answers = answers;
    return this;
  }

   /**
   * Get answers
   * @return answers
  **/
  @ApiModelProperty(required = true, value = "")

  public Object getAnswers() {
    return answers;
  }


  public void setAnswers(Object answers) {
    this.answers = answers;
  }


  public ClimbingQuestionnaireUser questionnaires(List<ClimbingQuestionnaire> questionnaires) {
    
    this.questionnaires = questionnaires;
    return this;
  }

  public ClimbingQuestionnaireUser addQuestionnairesItem(ClimbingQuestionnaire questionnairesItem) {
    this.questionnaires.add(questionnairesItem);
    return this;
  }

   /**
   * Get questionnaires
   * @return questionnaires
  **/
  @ApiModelProperty(required = true, value = "")

  public List<ClimbingQuestionnaire> getQuestionnaires() {
    return questionnaires;
  }


  public void setQuestionnaires(List<ClimbingQuestionnaire> questionnaires) {
    this.questionnaires = questionnaires;
  }


  public ClimbingQuestionnaireUser analysis(ClimbingQuestionnaireAnalysis analysis) {
    
    this.analysis = analysis;
    return this;
  }

   /**
   * Get analysis
   * @return analysis
  **/
  @ApiModelProperty(required = true, value = "")

  public ClimbingQuestionnaireAnalysis getAnalysis() {
    return analysis;
  }


  public void setAnalysis(ClimbingQuestionnaireAnalysis analysis) {
    this.analysis = analysis;
  }


  public ClimbingQuestionnaireUser createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClimbingQuestionnaireUser climbingQuestionnaireUser = (ClimbingQuestionnaireUser) o;
    return Objects.equals(this.id, climbingQuestionnaireUser.id) &&
        Objects.equals(this.userId, climbingQuestionnaireUser.userId) &&
        Objects.equals(this.result, climbingQuestionnaireUser.result) &&
        Objects.equals(this.answers, climbingQuestionnaireUser.answers) &&
        Objects.equals(this.questionnaires, climbingQuestionnaireUser.questionnaires) &&
        Objects.equals(this.analysis, climbingQuestionnaireUser.analysis) &&
        Objects.equals(this.createdAt, climbingQuestionnaireUser.createdAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, result, answers, questionnaires, analysis, createdAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClimbingQuestionnaireUser {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    result: ").append(toIndentedString(result)).append("\n");
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    questionnaires: ").append(toIndentedString(questionnaires)).append("\n");
    sb.append("    analysis: ").append(toIndentedString(analysis)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

